/*
 *				=== static 3DS export by -tHE SWINe- ===
 */

class Ctest_3ds {
	struct TLight {
		const char *p_s_name;
		bool b_spot, b_off, b_cast_shadows;
		float p_position[4]; // w is always 1
		float p_target[4]; // w is always 1
		float f_hotspot, f_fallof;
		float f_inner_range, f_outer_range, f_multiplier;
		float p_color[4]; // a is always 1
	};

	struct TMaterial {
		const char *p_s_name;
		int n_id;
	};

	struct TObject {
		const char *p_s_name;
		int n_id, n_parent;
		float p_transform[16];
		int n_vertex_num, n_face_num;
		const float *p_vertex; // GL_T2F_N3F_V3F
		const unsigned int *p_face;
		int n_mat_range_num;
		const struct TMatRange {
			int n_material;
			int n_first, n_count; // in vertices
		} *p_mat_ranges;

		/*
		void Draw() const
		{
			glInterleavedArrays(GL_T2F_N3F_V3F, 8 * sizeof(float), p_vertex);
			// supply vertex data

			glDrawElements(GL_TRIANGLES, 3 * n_face_num, GL_UNSIGNED_INT, p_face);
			// draw object unsing triangles

			glDisableClientState(GL_TEXTURE_COORD_ARRAY);
			glDisableClientState(GL_NORMAL_ARRAY);
			glDisableClientState(GL_VERTEX_ARRAY);
			// finished using vertex data
		}
		*/
	};

	struct TCamera {
		const char *p_s_name;
		int n_id;
		float f_pos_x, f_pos_y, f_pos_z;
		float f_tar_x, f_tar_y, f_tar_z;
		float f_bank_angle;
		float f_focus;
		int n_position_num;
		int n_target_num;
		const float *tt, *tx, *ty, *tz;
		const float *pt, *px, *py, *pz;
	};

	static const float p_object_0_vertices[8 * 26];
	static const unsigned int p_object_0_indices[3 * 12];
	static const TObject::TMatRange p_object_0_materials[1];
	static const float p_object_1_vertices[8 * 26];
	static const unsigned int p_object_1_indices[3 * 12];
	static const TObject::TMatRange p_object_1_materials[1];
	static const float p_object_2_vertices[8 * 26];
	static const unsigned int p_object_2_indices[3 * 12];
	static const TObject::TMatRange p_object_2_materials[1];
	static const float p_object_3_vertices[8 * 68];
	static const unsigned int p_object_3_indices[3 * 36];
	static const TObject::TMatRange p_object_3_materials[8];
	static const float p_camera_0_pos_track[4 * 1];
	static const float p_camera_0_tar_track[4 * 1];
	static const float p_camera_1_pos_track[4 * 41];
	static const float p_camera_1_tar_track[4 * 1];
	static const TObject m_p_object[4];
	static const TLight m_p_light[2];
	static const TMaterial m_p_material[8];
	static const TCamera m_p_camera[2];

public:
	static int n_Object_Num()
	{
		return 4;
	}

	static int n_Light_Num()
	{
		return 2;
	}

	static int n_Material_Num()
	{
		return 8;
	}

	static int n_Camera_Num()
	{
		return 2;
	}

	static const TObject *p_Object()
	{
		return m_p_object;
	}

	static const TLight *p_Light()
	{
		return m_p_light;
	}

	static const TMaterial *p_Material()
	{
		return m_p_material;
	}

	static const TCamera *p_Camera()
	{
		return m_p_camera;
	}

	/*
	static void Draw()
	{
		for(int i = 0; i < 4; ++ i)
			p_Object()[i].Draw();
	}
	*/
};

const Ctest_3ds::TMaterial Ctest_3ds::m_p_material[8] = {
	{"bar", 0},
	{"foo", 0},
	{"blah", 0},
	{"Material #25", 0},
	{"Material #26", 0},
	{"Material #28", 0},
	{"Material #29", 0},
	{"Material #30", 0}
};

const Ctest_3ds::TLight Ctest_3ds::m_p_light[2] = {
	{"Omni01", false, false, false,
	{-60.919540f, 33.333332f, -0.000001f, 1.000000f},
	{0.000000f, 0.000000f, 0.000000f, 1.000000f},
	0.000000f, 0.000000f, 80.000000f, 200.000000f, 1.000000f,
	{1.000000f, 1.000000f, 1.000000f, 1.000000f}},
	{"Spot01", true, false, false,
	{7.958885f, 31.034483f, -22.140686f, 1.000000f},
	{59.429714f, 30.268200f, 13.855487f, 1.000000f},
	43.000000f, 45.000000f, 80.000000f, 200.000000f, 2.000000f,
	{1.000000f, 1.000000f, 1.000000f, 1.000000f}}
};

const float Ctest_3ds::p_camera_0_pos_track[4 * 1] = {
	0.000000f,
	25.722694f,
	62.854404f,
	-31.034485f,
};

const float Ctest_3ds::p_camera_0_tar_track[4 * 1] = {
	0.000000f,
	-44.061302f,
	0.000000f,
	39.463600f,
};

const float Ctest_3ds::p_camera_1_pos_track[4 * 41] = {
	0.000000f, 5.000000f, 7.000000f, 10.000000f, 11.000000f, 14.000000f, 15.000000f, 21.000000f,
	21.000000f, 22.000000f, 26.000000f, 28.000000f, 31.000000f, 33.000000f, 35.000000f, 36.000000f,
	42.000000f, 42.000000f, 44.000000f, 47.000000f, 50.000000f, 52.000000f, 55.000000f, 57.000000f,
	57.000000f, 63.000000f, 64.000000f, 66.000000f, 68.000000f, 71.000000f, 73.000000f, 77.000000f,
	78.000000f, 78.000000f, 84.000000f, 85.000000f, 88.000000f, 89.000000f, 92.000000f, 94.000000f,
	100.000000f,
	-32.567051f, -57.898937f, -65.693771f, -76.346657f, -77.623421f, -80.871399f, -79.998238f, -66.022774f,
	-64.463417f, -60.960796f, -38.972416f, -24.648897f, -3.980119f, 8.556906f, 25.600367f, 33.496002f,
	66.146805f, 69.953003f, 77.026749f, 86.009232f, 88.656113f, 85.122665f, 74.071136f, 66.076576f,
	62.039200f, 35.421455f, 31.025269f, 23.037325f, 17.853939f, 9.228746f, 2.058841f, -13.571655f,
	-16.211306f, -17.307104f, -13.628695f, -5.868787f, 10.202267f, 12.126679f, 10.173065f, 0.797344f,
	-32.567051f,
	42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f,
	42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f,
	42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f,
	42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f,
	42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f, 42.162903f,
	42.162903f,
	-67.049805f, -52.436249f, -44.803139f, -29.380741f, -26.605812f, -11.670090f, -4.935066f, 15.696064f,
	16.954647f, 19.501713f, 29.991753f, 33.606667f, 35.642239f, 35.214016f, 32.767139f, 30.924011f,
	17.450165f, 14.973351f, 9.381481f, -1.987378f, -13.069636f, -24.593485f, -36.710308f, -41.878448f,
	-43.761215f, -41.201286f, -36.550915f, -23.963863f, -13.852104f, 0.933884f, 6.489576f, -2.944326f,
	-7.060510f, -9.144319f, -37.149559f, -42.526432f, -51.191776f, -52.587261f, -60.720867f, -64.760201f,
	-67.049805f,
};

const float Ctest_3ds::p_camera_1_tar_track[4 * 1] = {
	0.000000f,
	77.777779f,
	0.000000f,
	2.681992f,
};

const Ctest_3ds::TCamera Ctest_3ds::m_p_camera[2] = {
	{"Camera01", 0, 25.722694f, -31.034485f, 62.854404f, -44.061302f,
	39.463600f, 0.000000f, 0.000000f, 53.333332f, 1, 1,
	p_camera_0_pos_track, p_camera_0_pos_track + 1,
	p_camera_0_pos_track + 2, p_camera_0_pos_track + 3,
	p_camera_0_tar_track, p_camera_0_tar_track + 1,
	p_camera_0_tar_track + 2, p_camera_0_tar_track + 3},
	{"Camera03", 0, -77.473267f, -27.111862f, 42.162903f, 77.777779f,
	2.681992f, 0.000000f, 0.000000f, 53.333332f, 41, 1,
	p_camera_1_pos_track, p_camera_1_pos_track + 41,
	p_camera_1_pos_track + 82, p_camera_1_pos_track + 123,
	p_camera_1_tar_track, p_camera_1_tar_track + 1,
	p_camera_1_tar_track + 2, p_camera_1_tar_track + 3}
};

/* === static arrays for 'test.3ds' -> object 0 === */

const float Ctest_3ds::p_object_0_vertices[8 * 26] = {
	0.000000f, 0.000000f, -0.333333f, 0.666667f, -0.666667f, -102.297852f, 0.001000f, -55.554558f,
	1.000000f, 0.000000f, 0.816497f, 0.408248f, -0.408248f, 102.299850f, 0.001000f, -55.554558f,
	0.000000f, 1.000000f, -0.816497f, 0.408248f, 0.408248f, -102.297852f, 0.001000f, 55.556557f,
	1.000000f, 1.000000f, 0.333333f, 0.666667f, 0.666667f, 102.299850f, 0.001000f, 55.556557f,
	1.000000f, 0.000000f, -0.666667f, -0.666667f, -0.333333f, -102.297852f, -9.960689f, -55.554558f,
	0.000000f, 0.000000f, 0.408248f, -0.408248f, -0.816497f, 102.299850f, -9.960689f, -55.554558f,
	1.000000f, 1.000000f, -0.408248f, -0.408248f, 0.816497f, -102.297852f, -9.960689f, 55.556557f,
	0.000000f, 1.000000f, 0.666667f, -0.666667f, 0.333333f, 102.299850f, -9.960689f, 55.556557f,
	1.000000f, 1.000000f, 0.408248f, -0.408248f, -0.816497f, 102.299850f, -9.960689f, -55.554558f,
	0.000000f, 1.000000f, -0.666667f, -0.666667f, -0.333333f, -102.297852f, -9.960689f, -55.554558f,
	1.000000f, 1.000000f, 0.408248f, -0.408248f, -0.816497f, 102.299850f, -9.960689f, -55.554558f,
	1.000000f, 0.000000f, 0.333333f, 0.666667f, 0.666667f, 102.299850f, 0.001000f, 55.556557f,
	0.000000f, 0.000000f, 0.816497f, 0.408248f, -0.408248f, 102.299850f, 0.001000f, -55.554558f,
	1.000000f, 1.000000f, 0.666667f, -0.666667f, 0.333333f, 102.299850f, -9.960689f, 55.556557f,
	0.000000f, 1.000000f, 0.408248f, -0.408248f, -0.816497f, 102.299850f, -9.960689f, -55.554558f,
	1.000000f, 1.000000f, 0.666667f, -0.666667f, 0.333333f, 102.299850f, -9.960689f, 55.556557f,
	0.000000f, 0.000000f, 0.816497f, 0.408248f, -0.408248f, 102.299850f, 0.001000f, -55.554558f,
	1.000000f, 0.000000f, -0.816497f, 0.408248f, 0.408248f, -102.297852f, 0.001000f, 55.556557f,
	0.000000f, 0.000000f, 0.333333f, 0.666667f, 0.666667f, 102.299850f, 0.001000f, 55.556557f,
	0.000000f, 0.000000f, 0.333333f, 0.666667f, 0.666667f, 102.299850f, 0.001000f, 55.556557f,
	1.000000f, 0.000000f, -0.333333f, 0.666667f, -0.666667f, -102.297852f, 0.001000f, -55.554558f,
	0.000000f, 0.000000f, -0.816497f, 0.408248f, 0.408248f, -102.297852f, 0.001000f, 55.556557f,
	1.000000f, 1.000000f, -0.666667f, -0.666667f, -0.333333f, -102.297852f, -9.960689f, -55.554558f,
	0.000000f, 1.000000f, -0.408248f, -0.408248f, 0.816497f, -102.297852f, -9.960689f, 55.556557f,
	1.000000f, 1.000000f, -0.666667f, -0.666667f, -0.333333f, -102.297852f, -9.960689f, -55.554558f,
	0.000000f, 0.000000f, -0.816497f, 0.408248f, 0.408248f, -102.297852f, 0.001000f, 55.556557f
};
const unsigned int Ctest_3ds::p_object_0_indices[3 * 12] = {
	2, 3, 0, 1, 0, 3, 5, 7, 4, 6, 4, 7, 1, 8, 0, 9, 0, 10, 11, 13, 12, 14, 16, 15,
	17, 6, 18, 7, 19, 6, 20, 22, 21, 23, 25, 24
};
const Ctest_3ds::TObject::TMatRange Ctest_3ds::p_object_0_materials[1] = {
	{0, 0, 36}
};

/* === ~static arrays for 'test.3ds' -> object 0 === */

/* === static arrays for 'test.3ds' -> object 1 === */

const float Ctest_3ds::p_object_1_vertices[8 * 26] = {
	0.000000f, 0.000000f, -0.666667f, -0.666667f, 0.333333f, 101.934868f, -9.578542f, 55.555557f,
	1.000000f, 0.000000f, -0.408248f, -0.408248f, -0.816497f, 101.934853f, -9.578547f, -55.555557f,
	0.000000f, 1.000000f, -0.408248f, 0.408248f, 0.816497f, 101.934868f, 63.218395f, 55.555553f,
	1.000000f, 1.000000f, -0.666667f, 0.666667f, -0.333333f, 101.934853f, 63.218388f, -55.555561f,
	1.000000f, 0.000000f, 0.666667f, -0.333333f, 0.666667f, 112.662842f, -9.578542f, 55.555557f,
	0.000000f, 0.000000f, 0.408248f, -0.816497f, -0.408248f, 112.662827f, -9.578547f, -55.555557f,
	1.000000f, 1.000000f, 0.408248f, 0.816497f, 0.408248f, 112.662834f, 63.218395f, 55.555553f,
	0.000000f, 1.000000f, 0.666667f, 0.333333f, -0.666667f, 112.662819f, 63.218388f, -55.555561f,
	1.000000f, 1.000000f, 0.408248f, -0.816497f, -0.408248f, 112.662827f, -9.578547f, -55.555557f,
	0.000000f, 1.000000f, 0.666667f, -0.333333f, 0.666667f, 112.662842f, -9.578542f, 55.555557f,
	1.000000f, 1.000000f, 0.408248f, -0.816497f, -0.408248f, 112.662827f, -9.578547f, -55.555557f,
	1.000000f, 0.000000f, -0.666667f, 0.666667f, -0.333333f, 101.934853f, 63.218388f, -55.555561f,
	0.000000f, 0.000000f, -0.408248f, -0.408248f, -0.816497f, 101.934853f, -9.578547f, -55.555557f,
	1.000000f, 1.000000f, 0.666667f, 0.333333f, -0.666667f, 112.662819f, 63.218388f, -55.555561f,
	0.000000f, 1.000000f, 0.408248f, -0.816497f, -0.408248f, 112.662827f, -9.578547f, -55.555557f,
	1.000000f, 1.000000f, 0.666667f, 0.333333f, -0.666667f, 112.662819f, 63.218388f, -55.555561f,
	0.000000f, 0.000000f, -0.408248f, -0.408248f, -0.816497f, 101.934853f, -9.578547f, -55.555557f,
	1.000000f, 0.000000f, -0.408248f, 0.408248f, 0.816497f, 101.934868f, 63.218395f, 55.555553f,
	0.000000f, 0.000000f, -0.666667f, 0.666667f, -0.333333f, 101.934853f, 63.218388f, -55.555561f,
	0.000000f, 0.000000f, -0.666667f, 0.666667f, -0.333333f, 101.934853f, 63.218388f, -55.555561f,
	1.000000f, 0.000000f, -0.666667f, -0.666667f, 0.333333f, 101.934868f, -9.578542f, 55.555557f,
	0.000000f, 0.000000f, -0.408248f, 0.408248f, 0.816497f, 101.934868f, 63.218395f, 55.555553f,
	1.000000f, 1.000000f, 0.666667f, -0.333333f, 0.666667f, 112.662842f, -9.578542f, 55.555557f,
	0.000000f, 1.000000f, 0.408248f, 0.816497f, 0.408248f, 112.662834f, 63.218395f, 55.555553f,
	1.000000f, 1.000000f, 0.666667f, -0.333333f, 0.666667f, 112.662842f, -9.578542f, 55.555557f,
	0.000000f, 0.000000f, -0.408248f, 0.408248f, 0.816497f, 101.934868f, 63.218395f, 55.555553f
};
const unsigned int Ctest_3ds::p_object_1_indices[3 * 12] = {
	2, 3, 0, 1, 0, 3, 5, 7, 4, 6, 4, 7, 1, 8, 0, 9, 0, 10, 11, 13, 12, 14, 16, 15,
	17, 6, 18, 7, 19, 6, 20, 22, 21, 23, 25, 24
};
const Ctest_3ds::TObject::TMatRange Ctest_3ds::p_object_1_materials[1] = {
	{1, 0, 36}
};

/* === ~static arrays for 'test.3ds' -> object 1 === */

/* === static arrays for 'test.3ds' -> object 2 === */

const float Ctest_3ds::p_object_2_vertices[8 * 26] = {
	0.000000f, 0.000000f, -0.333333f, -0.666667f, -0.666667f, -102.298851f, -9.578545f, 55.191566f,
	1.000000f, 0.000000f, 0.816497f, -0.408248f, -0.408248f, 113.026817f, -9.578545f, 55.191566f,
	0.000000f, 1.000000f, -0.816497f, 0.408248f, -0.408248f, -102.298851f, 63.218391f, 55.191566f,
	1.000000f, 1.000000f, 0.333333f, 0.666667f, -0.666667f, 113.026817f, 63.218391f, 55.191566f,
	1.000000f, 0.000000f, -0.666667f, -0.333333f, 0.666667f, -102.298851f, -9.578545f, 65.153252f,
	0.000000f, 0.000000f, 0.408248f, -0.816497f, 0.408248f, 113.026817f, -9.578545f, 65.153252f,
	1.000000f, 1.000000f, -0.408248f, 0.816497f, 0.408248f, -102.298851f, 63.218391f, 65.153252f,
	0.000000f, 1.000000f, 0.666667f, 0.333333f, 0.666667f, 113.026817f, 63.218391f, 65.153252f,
	1.000000f, 1.000000f, 0.408248f, -0.816497f, 0.408248f, 113.026817f, -9.578545f, 65.153252f,
	0.000000f, 1.000000f, -0.666667f, -0.333333f, 0.666667f, -102.298851f, -9.578545f, 65.153252f,
	1.000000f, 1.000000f, 0.408248f, -0.816497f, 0.408248f, 113.026817f, -9.578545f, 65.153252f,
	1.000000f, 0.000000f, 0.333333f, 0.666667f, -0.666667f, 113.026817f, 63.218391f, 55.191566f,
	0.000000f, 0.000000f, 0.816497f, -0.408248f, -0.408248f, 113.026817f, -9.578545f, 55.191566f,
	1.000000f, 1.000000f, 0.666667f, 0.333333f, 0.666667f, 113.026817f, 63.218391f, 65.153252f,
	0.000000f, 1.000000f, 0.408248f, -0.816497f, 0.408248f, 113.026817f, -9.578545f, 65.153252f,
	1.000000f, 1.000000f, 0.666667f, 0.333333f, 0.666667f, 113.026817f, 63.218391f, 65.153252f,
	0.000000f, 0.000000f, 0.816497f, -0.408248f, -0.408248f, 113.026817f, -9.578545f, 55.191566f,
	1.000000f, 0.000000f, -0.816497f, 0.408248f, -0.408248f, -102.298851f, 63.218391f, 55.191566f,
	0.000000f, 0.000000f, 0.333333f, 0.666667f, -0.666667f, 113.026817f, 63.218391f, 55.191566f,
	0.000000f, 0.000000f, 0.333333f, 0.666667f, -0.666667f, 113.026817f, 63.218391f, 55.191566f,
	1.000000f, 0.000000f, -0.333333f, -0.666667f, -0.666667f, -102.298851f, -9.578545f, 55.191566f,
	0.000000f, 0.000000f, -0.816497f, 0.408248f, -0.408248f, -102.298851f, 63.218391f, 55.191566f,
	1.000000f, 1.000000f, -0.666667f, -0.333333f, 0.666667f, -102.298851f, -9.578545f, 65.153252f,
	0.000000f, 1.000000f, -0.408248f, 0.816497f, 0.408248f, -102.298851f, 63.218391f, 65.153252f,
	1.000000f, 1.000000f, -0.666667f, -0.333333f, 0.666667f, -102.298851f, -9.578545f, 65.153252f,
	0.000000f, 0.000000f, -0.816497f, 0.408248f, -0.408248f, -102.298851f, 63.218391f, 55.191566f
};
const unsigned int Ctest_3ds::p_object_2_indices[3 * 12] = {
	2, 3, 0, 1, 0, 3, 5, 7, 4, 6, 4, 7, 1, 8, 0, 9, 0, 10, 11, 13, 12, 14, 16, 15,
	17, 6, 18, 7, 19, 6, 20, 22, 21, 23, 25, 24
};
const Ctest_3ds::TObject::TMatRange Ctest_3ds::p_object_2_materials[1] = {
	{2, 0, 36}
};

/* === ~static arrays for 'test.3ds' -> object 2 === */

/* === static arrays for 'test.3ds' -> object 3 === */

const float Ctest_3ds::p_object_3_vertices[8 * 68] = {
	1.000000f, 0.000000f, -0.333333f, -0.666667f, -0.666667f, -108.429123f, 0.000000f, 81.609192f,
	0.750000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, -52.873562f, 0.000000f, 81.609192f,
	0.500000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, 2.681995f, 0.000000f, 81.609192f,
	0.250000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, 58.237553f, 0.000000f, 81.609192f,
	0.000000f, 0.000000f, 0.816497f, -0.408248f, -0.408248f, 113.793106f, 0.000000f, 81.609192f,
	1.000000f, 1.000000f, -0.816497f, -0.408248f, 0.408248f, -108.429123f, 0.000000f, 107.662842f,
	0.750000f, 1.000000f, -0.000000f, -0.707107f, 0.707107f, -52.873562f, 0.000000f, 107.662842f,
	0.500000f, 1.000000f, -0.000000f, -0.707107f, 0.707107f, 2.681995f, 0.000000f, 107.662842f,
	0.250000f, 1.000000f, -0.000000f, -0.707107f, 0.707107f, 58.237553f, 0.000000f, 107.662842f,
	0.000000f, 1.000000f, 0.333333f, -0.666667f, 0.666667f, 113.793106f, 0.000000f, 107.662842f,
	0.000000f, 0.000000f, -0.666667f, 0.666667f, -0.333333f, -108.429123f, 22.988503f, 81.609192f,
	0.250000f, 0.000000f, -0.000000f, 0.707107f, -0.707107f, -52.873562f, 22.988503f, 81.609192f,
	0.500000f, 0.000000f, -0.000000f, 0.707107f, -0.707107f, 2.681995f, 22.988503f, 81.609192f,
	0.750000f, 0.000000f, -0.000000f, 0.707107f, -0.707107f, 58.237553f, 22.988503f, 81.609192f,
	1.000000f, 0.000000f, 0.408248f, 0.408248f, -0.816497f, 113.793106f, 22.988503f, 81.609192f,
	0.000000f, 1.000000f, -0.408248f, 0.408248f, 0.816497f, -108.429123f, 22.988503f, 107.662842f,
	0.250000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, -52.873562f, 22.988503f, 107.662842f,
	0.500000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, 2.681995f, 22.988503f, 107.662842f,
	0.750000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, 58.237553f, 22.988503f, 107.662842f,
	1.000000f, 1.000000f, 0.666667f, 0.666667f, 0.333333f, 113.793106f, 22.988503f, 107.662842f,
	0.000000f, 0.000000f, -0.333333f, -0.666667f, -0.666667f, -108.429123f, 0.000000f, 81.609192f,
	0.250000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, -52.873562f, 0.000000f, 81.609192f,
	0.250000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, -52.873562f, 22.988503f, 81.609192f,
	0.250000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, -52.873562f, 22.988503f, 81.609192f,
	0.000000f, 1.000000f, -0.666667f, 0.666667f, -0.333333f, -108.429123f, 22.988503f, 81.609192f,
	0.000000f, 0.000000f, -0.333333f, -0.666667f, -0.666667f, -108.429123f, 0.000000f, 81.609192f,
	0.250000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, -52.873562f, 0.000000f, 81.609192f,
	0.500000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, 2.681995f, 22.988503f, 81.609192f,
	0.500000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, 2.681995f, 22.988503f, 81.609192f,
	0.250000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, -52.873562f, 22.988503f, 81.609192f,
	0.250000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, -52.873562f, 0.000000f, 81.609192f,
	0.750000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, 58.237553f, 0.000000f, 81.609192f,
	0.750000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, 58.237553f, 22.988503f, 81.609192f,
	0.750000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, 58.237553f, 22.988503f, 81.609192f,
	0.500000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, 2.681995f, 22.988503f, 81.609192f,
	0.750000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, 58.237553f, 0.000000f, 81.609192f,
	1.000000f, 0.000000f, 0.816497f, -0.408248f, -0.408248f, 113.793106f, 0.000000f, 81.609192f,
	1.000000f, 1.000000f, 0.408248f, 0.408248f, -0.816497f, 113.793106f, 22.988503f, 81.609192f,
	1.000000f, 1.000000f, 0.408248f, 0.408248f, -0.816497f, 113.793106f, 22.988503f, 81.609192f,
	0.750000f, 1.000000f, -0.000000f, 0.707107f, -0.707107f, 58.237553f, 22.988503f, 81.609192f,
	0.750000f, 0.000000f, -0.000000f, -0.707107f, -0.707107f, 58.237553f, 0.000000f, 81.609192f,
	1.000000f, 0.000000f, 0.333333f, -0.666667f, 0.666667f, 113.793106f, 0.000000f, 107.662842f,
	0.000000f, 1.000000f, 0.408248f, 0.408248f, -0.816497f, 113.793106f, 22.988503f, 81.609192f,
	0.000000f, 0.000000f, 0.333333f, -0.666667f, 0.666667f, 113.793106f, 0.000000f, 107.662842f,
	0.250000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, 58.237553f, 0.000000f, 107.662842f,
	0.250000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, 58.237553f, 22.988503f, 107.662842f,
	0.250000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, 58.237553f, 22.988503f, 107.662842f,
	0.000000f, 1.000000f, 0.666667f, 0.666667f, 0.333333f, 113.793106f, 22.988503f, 107.662842f,
	0.000000f, 0.000000f, 0.333333f, -0.666667f, 0.666667f, 113.793106f, 0.000000f, 107.662842f,
	0.250000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, 58.237553f, 0.000000f, 107.662842f,
	0.500000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, 2.681995f, 0.000000f, 107.662842f,
	0.250000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, 58.237553f, 22.988503f, 107.662842f,
	0.250000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, 58.237553f, 0.000000f, 107.662842f,
	0.500000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, 2.681995f, 0.000000f, 107.662842f,
	0.750000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, -52.873562f, 0.000000f, 107.662842f,
	0.750000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, -52.873562f, 22.988503f, 107.662842f,
	0.750000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, -52.873562f, 22.988503f, 107.662842f,
	0.500000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, 2.681995f, 0.000000f, 107.662842f,
	0.750000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, -52.873562f, 0.000000f, 107.662842f,
	1.000000f, 0.000000f, -0.816497f, -0.408248f, 0.408248f, -108.429123f, 0.000000f, 107.662842f,
	1.000000f, 1.000000f, -0.408248f, 0.408248f, 0.816497f, -108.429123f, 22.988503f, 107.662842f,
	1.000000f, 1.000000f, -0.408248f, 0.408248f, 0.816497f, -108.429123f, 22.988503f, 107.662842f,
	0.750000f, 1.000000f, -0.000000f, 0.707107f, 0.707107f, -52.873562f, 22.988503f, 107.662842f,
	0.750000f, 0.000000f, -0.000000f, -0.707107f, 0.707107f, -52.873562f, 0.000000f, 107.662842f,
	0.000000f, 0.000000f, -0.816497f, -0.408248f, 0.408248f, -108.429123f, 0.000000f, 107.662842f,
	1.000000f, 1.000000f, -0.666667f, 0.666667f, -0.333333f, -108.429123f, 22.988503f, 81.609192f,
	1.000000f, 1.000000f, -0.666667f, 0.666667f, -0.333333f, -108.429123f, 22.988503f, 81.609192f,
	0.000000f, 0.000000f, -0.816497f, -0.408248f, 0.408248f, -108.429123f, 0.000000f, 107.662842f
};
const unsigned int Ctest_3ds::p_object_3_indices[3 * 36] = {
	2, 8, 7, 8, 2, 3, 12, 18, 13, 18, 12, 17, 2, 32, 31, 33, 2, 34, 49, 17, 50,
	17, 52, 51, 1, 7, 6, 7, 1, 2, 11, 17, 12, 17, 11, 16, 26, 27, 2, 28, 30, 29,
	53, 55, 54, 56, 57, 17, 0, 6, 5, 6, 0, 1, 10, 16, 11, 16, 10, 15, 20, 22, 21,
	23, 25, 24, 58, 60, 59, 61, 63, 62, 64, 65, 0, 66, 67, 15, 13, 19, 14,
	19, 13, 18, 3, 9, 8, 9, 3, 4, 4, 19, 41, 19, 4, 42, 35, 37, 36, 38, 40, 39,
	43, 45, 44, 46, 48, 47
};
const Ctest_3ds::TObject::TMatRange Ctest_3ds::p_object_3_materials[8] = {
	{0, 0, 24},
	{1, 24, 24},
	{2, 48, 30},
	{3, 78, 6},
	{4, 84, 6},
	{5, 90, 6},
	{6, 96, 6},
	{7, 102, 6}
};

/* === ~static arrays for 'test.3ds' -> object 3 === */

const Ctest_3ds::TObject Ctest_3ds::m_p_object[4] = {
	{"Box01", 0, -1, {
	1.000000f, 0.000000f, 0.000000f, 0.000000f,
	0.000000f, 1.000000f, 0.000000f, 0.000000f,
	0.000000f, 0.000000f, 1.000000f, 0.000000f,
	0.001000f, 0.001000f, 0.001000f, 1.000000f}, 26, 12,
	p_object_0_vertices, p_object_0_indices,
	1, p_object_0_materials},
	{"Box02", 1, -1, {
	-0.000000f, -1.000000f, -0.000000f, 0.000000f,
	-0.000000f, -0.000000f, 1.000000f, 0.000000f,
	-1.000000f, 0.000000f, -0.000000f, 0.000000f,
	101.934860f, -0.000001f, 26.819923f, 1.000000f}, 26, 12,
	p_object_1_vertices, p_object_1_indices,
	1, p_object_1_materials},
	{"Box03", 2, -1, {
	1.000000f, 0.000000f, 0.000000f, 0.000000f,
	0.000000f, -0.000000f, 1.000000f, 0.000000f,
	0.000000f, -1.000000f, -0.000000f, 0.000000f,
	5.363983f, 55.191566f, 26.819923f, 1.000000f}, 26, 12,
	p_object_2_vertices, p_object_2_indices,
	1, p_object_2_materials},
	{"Box04", 10, -1, {
	1.000000f, 0.000000f, 0.000000f, 0.000000f,
	0.000000f, 1.000000f, 0.000000f, 0.000000f,
	0.000000f, 0.000000f, 1.000000f, 0.000000f,
	2.681995f, 94.636017f, 0.000000f, 1.000000f}, 68, 36,
	p_object_3_vertices, p_object_3_indices,
	8, p_object_3_materials}
};

/*
 * -end-of-file-
 */
